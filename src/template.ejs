<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>K6 Load Test: <%= title %></title>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous" />
<style>
  body, html {
    margin: 0; padding: 0;
    font-family: 'Roboto', sans-serif;
    background: #f4f6fa;
    color: #222;
  }
  header {
    background: #3f51b5;
    color: white;
    padding: 24px 40px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  header h1 {
    font-weight: 700; font-size: 2rem; margin: 0;
  }
  .metrics-row {
    display: flex; flex-wrap: wrap; gap: 20px;
    margin: 24px 40px;
  }
  .metric-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    flex: 1 1 200px;
    padding: 20px;
    display: flex; flex-direction: column;
    justify-content: center;
  }
  .metric-card.failed { border-left: 6px solid #f44336; }
  .metric-card h4 { margin: 0 0 10px; font-size: 1.1rem; display: flex; align-items: center; gap: 8px; }
  .metric-card .number { font-size: 2rem; font-weight: 700; }

  .chart-container { margin: 40px; background: white; border-radius: 12px; padding: 24px; box-shadow: 0 4px 12px rgba(0,0,0,0.12); }
  canvas { width: 100% !important; height: 400px !important; }

  .insights-table {
    width: calc(100% - 80px);
    margin: 40px;
    border-collapse: collapse;
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
  }
  .insights-table th, .insights-table td {
    padding: 12px 16px;
    text-align: left;
    border-bottom: 1px solid #eee;
  }
  .insights-table th { background: #e0e0e0; }
  .insights-table td.pass { color: #4caf50; font-weight: 600; }
  .insights-table td.fail { color: #f44336; font-weight: 600; }
</style>
</head>
<body>

<header>
  <h1><i class="fas fa-tachometer-alt"></i> Load Test: <%= title %></h1>
</header>

<div class="metrics-row">
  <div class="metric-card">
    <h4><i class="fas fa-check-circle"></i> Passed Checks</h4>
    <div class="number"><%= data.root_group.checks.filter(c => c.fails === 0).length %></div>
  </div>
  <div class="metric-card failed">
    <h4><i class="fas fa-exclamation-triangle"></i> Failed Checks</h4>
    <div class="number"><%= data.root_group.checks.filter(c => c.fails > 0).length %></div>
  </div>
  <div class="metric-card">
    <h4><i class="fas fa-server"></i> Successful Status Codes (2xx)</h4>
    <div class="number"><%= data.metrics.http_reqs?.values.passes || 0 %></div>
  </div>
  <div class="metric-card failed">
    <h4><i class="fas fa-ban"></i> Failed Status Codes</h4>
    <div class="number"><%= data.metrics.http_req_failed?.values.count || 0 %></div>
  </div>
  <div class="metric-card">
    <h4><i class="fas fa-tachometer-alt"></i> Avg Response Time (ms)</h4>
    <div class="number"><%= data.metrics.http_req_duration?.values.avg || 0 %></div>
  </div>
  <div class="metric-card">
    <h4><i class="fas fa-chart-bar"></i> Max Response Time (ms)</h4>
    <div class="number"><%= data.metrics.http_req_duration?.values.max || 0 %></div>
  </div>
</div>

<!-- Charts Section -->
<div class="chart-container">
  <canvas id="responseTimeChart"></canvas>
</div>
<div class="chart-container">
  <canvas id="throughputChart"></canvas>
</div>
<div class="chart-container">
  <canvas id="errorRateChart"></canvas>
</div>
<div class="chart-container">
  <canvas id="status2xxChart"></canvas>
</div>
<div class="chart-container">
  <canvas id="statusFailedChart"></canvas>
</div>
<div class="chart-container">
  <canvas id="reqDurationChart"></canvas>
</div>

<!-- Insights Table -->
<table class="insights-table">
  <thead>
    <tr>
      <th>Check / Metric</th>
      <th>Expected</th>
      <th>Actual</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody>
    <% data.root_group.checks.forEach(check => { %>
      <tr>
        <td><%= check.name %></td>
        <td>Pass</td>
        <td><%= check.passes %></td>
        <td class="<%= check.fails > 0 ? 'fail':'pass' %>"><%= check.fails > 0 ? 'Fail':'Pass' %></td>
      </tr>
    <% }) %>
    <tr>
      <td>Total HTTP Requests</td>
      <td>-</td>
      <td><%= data.metrics.http_reqs?.values.count || 0 %></td>
      <td class="pass">-</td>
    </tr>
    <tr>
      <td>Failed HTTP Requests</td>
      <td>0</td>
      <td><%= data.metrics.http_req_failed?.values.count || 0 %></td>
      <td class="<%= (data.metrics.http_req_failed?.values.count || 0) > 0 ? 'fail':'pass' %>"><%= (data.metrics.http_req_failed?.values.count || 0) > 0 ? 'Fail':'Pass' %></td>
    </tr>
  </tbody>
</table>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  // Labels
  const labels = Array.from({length: 20}, (_, i) => `T${i+1}`);

  // Chart Data from K6 metrics
  const responseTimes = data.metrics.http_req_duration?.values.avg_data || [];
  const throughputs = data.metrics.http_reqs?.values.counts || [];
  const errorRates = data.metrics.http_req_failed?.values.counts || [];
  const status2xx = Array.from({length: labels.length}, () => data.metrics.http_reqs?.values.passes || 0);
  const statusFailed = Array.from({length: labels.length}, () => data.metrics.http_req_failed?.values.count || 0);
  const reqDurations = data.metrics.http_req_duration?.values || [];

  function createChart(ctx, type, label, data, color) {
    return new Chart(ctx, {
      type: type,
      data: { labels, datasets: [{ label, data, borderColor: color, backgroundColor: color+'33', fill: true, tension: 0.3 }] },
      options: { responsive: true,
        plugins: { legend: { display: true, labels: { color: '#333', font: { size: 14 } } } },
        scales: {
          x: { ticks: { color: '#555' }, grid: { color: '#eee' } },
          y: { ticks: { color: '#555' }, grid: { color: '#eee' } }
        }
      }
    });
  }

  createChart(document.getElementById('responseTimeChart').getContext('2d'), 'line', 'Avg Response Time (ms)', responseTimes, '#3f51b5');
  createChart(document.getElementById('throughputChart').getContext('2d'), 'bar', 'Throughput (req/sec)', throughputs, '#4caf50');
  createChart(document.getElementById('errorRateChart').getContext('2d'), 'line', 'Error Rate (%)', errorRates, '#f44336');
  createChart(document.getElementById('status2xxChart').getContext('2d'), 'bar', '2xx Status Codes', status2xx, '#2196f3');
  createChart(document.getElementById('statusFailedChart').getContext('2d'), 'bar', 'Failed Status Codes', statusFailed, '#f44336');
  createChart(document.getElementById('reqDurationChart').getContext('2d'), 'line', 'Req Duration (ms)', reqDurations, '#ff9800');
</script>

</body>
</html>
