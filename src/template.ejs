<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>K6 Load Test Report</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous" />
  <style>
    body, html { margin:0; padding:0; font-family:'Roboto',sans-serif; background:#f4f6fa; color:#222; display:flex; min-height:100vh; }
    nav.sidebar { width:60px; background:#3f51b5; display:flex; flex-direction:column; align-items:center; padding-top:20px; }
    nav.sidebar ul { list-style:none; padding:0; margin:0; }
    nav.sidebar ul li { margin:15px 0; }
    nav.sidebar ul li a { color:white; text-decoration:none; display:flex; justify-content:center; width:100%; font-size:1.5rem; }
    nav.sidebar ul li a.active, nav.sidebar ul li a:hover { background:rgba(255,255,255,0.2); border-radius:8px; }
    main.content { flex-grow:1; padding:20px 30px; overflow:auto; }
    h1 { font-size:2rem; margin-bottom:20px; color:#3f51b5; }
    .summary-row { display:flex; flex-wrap:wrap; gap:20px; margin-bottom:30px; }
    .card { background:white; border-radius:12px; box-shadow:0 4px 12px rgba(0,0,0,0.12); flex:1 1 180px; padding:20px; text-align:center; }
    .card.failed { border-left:6px solid #f44336; }
    .card h4 { margin:0 0 10px; font-size:1rem; display:flex; align-items:center; justify-content:center; gap:8px; }
    .card .number { font-size:2rem; font-weight:700; }
    .chart-container { margin-bottom:40px; }
    canvas { width:100% !important; height:350px !important; }
    table { width:100%; border-collapse:collapse; margin-top:10px; font-size:0.9rem; }
    thead th { background:#e0e0e0; padding:10px; text-align:left; }
    tbody td { padding:10px; border-bottom:1px solid #ddd; }
    td.failed { color:#f44336; font-weight:600; }
    td.good { color:#4caf50; font-weight:600; }
    .tabs { display:flex; gap:15px; margin-bottom:20px; }
    .tab { cursor:pointer; padding:6px 12px; border-radius:6px; background:#ddd; }
    .tab.active { background:#3f51b5; color:white; }
  </style>
</head>
<body>
  <nav class="sidebar">
    <ul>
      <li><a href="#" class="tab-link active" data-tab="overview"><i class="fas fa-home"></i></a></li>
      <li><a href="#" class="tab-link" data-tab="charts"><i class="fas fa-chart-line"></i></a></li>
      <li><a href="#" class="tab-link" data-tab="checks"><i class="fas fa-clipboard-check"></i></a></li>
    </ul>
  </nav>

  <main class="content">
    <h1><i class="fas fa-tachometer-alt"></i> Load Test Report</h1>

    <div id="overview" class="tab-content">
      <div class="summary-row">
        <div class="card"><h4><i class="fas fa-check-circle"></i> Passed Checks</h4><div class="number" id="checkPasses">0</div></div>
        <div class="card failed"><h4><i class="fas fa-exclamation-triangle"></i> Failed Checks</h4><div class="number" id="checkFailures">0</div></div>
        <div class="card"><h4><i class="fas fa-server"></i> Successful Status Codes</h4><div class="number" id="status2xx">0</div></div>
        <div class="card failed"><h4><i class="fas fa-ban"></i> Failed Status Codes</h4><div class="number" id="statusFailed">0</div></div>
        <div class="card failed"><h4><i class="fas fa-times-circle"></i> Failed Requests</h4><div class="number" id="failedRequests">0</div></div>
        <div class="card"><h4><i class="fas fa-exclamation-circle"></i> Threshold Breaches</h4><div class="number" id="thresholdBreaches">0</div></div>
      </div>
    </div>

    <div id="charts" class="tab-content" style="display:none;">
      <h2>Load Test Charts</h2>
      <div class="chart-container"><canvas id="responseTimeChart"></canvas></div>
      <div class="chart-container"><canvas id="throughputChart"></canvas></div>
      <div class="chart-container"><canvas id="errorRateChart"></canvas></div>
      <div class="chart-container"><canvas id="successRateChart"></canvas></div>
      <div class="chart-container"><canvas id="failedRateChart"></canvas></div>
      <div class="chart-container"><canvas id="thresholdChart"></canvas></div>
    </div>

    <div id="checks" class="tab-content" style="display:none;">
      <h2>Checks</h2>
      <table>
        <thead><tr><th>Check</th><th>Passes</th><th>Fails</th></tr></thead>
        <tbody id="checksTable"></tbody>
      </table>
    </div>
  </main>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Sample K6-like data (replace with actual handleSummary values)
    const data = {
      root_group:{checks:[
        {name:"Status 2xx", passes:120, fails:5},
        {name:"Response Time <500ms", passes:115, fails:10}
      ]},
      metrics:{
        http_reqs:{values:{count:125}},
        http_req_failed:{values:{count:10}},
        http_req_duration:{values:{avg:200, max:800, min:50}}
      },
      thresholds:{http_req_duration:{failed:3}}
    };

    // Calculate metrics
    const checkPasses = data.root_group.checks.reduce((s,c)=>s+c.passes,0);
    const checkFailures = data.root_group.checks.reduce((s,c)=>s+c.fails,0);
    const statusFailed = data.metrics.http_req_failed.values.count || 0;
    const status2xx = data.metrics.http_reqs.values.count - statusFailed;
    const failedRequests = statusFailed;
    const thresholdBreaches = Object.values(data.thresholds).reduce((s,t)=>s+(t.failed||0),0);

    document.getElementById("checkPasses").innerText = checkPasses;
    document.getElementById("checkFailures").innerText = checkFailures;
    document.getElementById("status2xx").innerText = status2xx;
    document.getElementById("statusFailed").innerText = statusFailed;
    document.getElementById("failedRequests").innerText = failedRequests;
    document.getElementById("thresholdBreaches").innerText = thresholdBreaches;

    // Fill Checks Table
    const tbody = document.getElementById("checksTable");
    data.root_group.checks.forEach(c=>{
      const tr = document.createElement("tr");
      if(c.fails>0) tr.classList.add("failed");
      tr.innerHTML=`<td>${c.name}</td><td>${c.passes}</td><td>${c.fails}</td>`;
      tbody.appendChild(tr);
    });

    // Tabs
    document.querySelectorAll('.tab-link').forEach(link=>{
      link.addEventListener('click', e=>{
        e.preventDefault();
        document.querySelectorAll('.tab-link').forEach(l=>l.classList.remove('active'));
        link.classList.add('active');
        const tab=link.dataset.tab;
        document.querySelectorAll('.tab-content').forEach(c=>c.style.display='none');
        document.getElementById(tab).style.display='block';
      });
    });

    // Create Charts
    const labels=Array.from({length:20},(_,i)=>`T${i+1}`);
    function createChart(ctx,label,data,color,type='line'){
      return new Chart(ctx,{type,type,data:{labels,datasets:[{label,data,borderColor:color,backgroundColor:color+'33',fill:true,tension:0.3}]},options:{responsive:true,plugins:{legend:{display:true}}}});
    }
    const responseTimes=Array.from({length:20},()=>Math.floor(Math.random()*500+100));
    const throughput=Array.from({length:20},()=>Math.floor(Math.random()*20+5));
    const errorRate=Array.from({length:20},()=>Math.floor(Math.random()*5));
    const successRate=Array.from({length:20},()=>Array.from({length:20},()=>Math.floor(Math.random()*100)));
    createChart(document.getElementById('responseTimeChart'), 'Response Time (ms)', responseTimes,'#3f51b5');
    createChart(document.getElementById('throughputChart'), 'Throughput (req/sec)', throughput,'#4caf50','bar');
    createChart(document.getElementById('errorRateChart'), 'Error Rate', errorRate,'#f44336');
    createChart(document.getElementById('successRateChart'), 'Success Rate', throughput,'#2196f3');
    createChart(document.getElementById('failedRateChart'), 'Failed Rate', errorRate,'#ff9800');
    createChart(document.getElementById('thresholdChart'), 'Threshold Breaches', Array.from({length:20},()=>Math.floor(Math.random()*5)),'#9c27b0');
  </script>
</body>
</html>
