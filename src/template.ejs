<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>K6 Load Test Dashboard: <%= title %></title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous" />
<style>
  body, html {
    margin: 0; padding: 0;
    font-family: 'Roboto', sans-serif;
    background: #f5f5f5;
    color: #222;
  }
  header {
    background: #3f51b5;
    color: white;
    padding: 20px 40px;
    font-size: 1.5rem;
    font-weight: 700;
    display: flex;
    align-items: center;
    gap: 10px;
  }
  .metrics-row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    padding: 20px 40px;
  }
  .metric-card {
    flex: 1 1 180px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    padding: 20px;
  }
  .metric-card.failed { border-left: 6px solid #f44336; }
  .metric-card h4 {
    margin: 0 0 10px; font-weight: 500; display: flex; align-items: center; gap: 10px;
    font-size: 1rem; color: #555;
  }
  .metric-card .number { font-size: 2rem; font-weight: 700; color: #3f51b5; }
  .charts-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    padding: 20px 40px;
  }
  .chart-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 14px rgba(0,0,0,0.1);
    padding: 20px;
  }
  table {
    width: 100%;
    border-collapse: collapse;
    margin: 40px 40px 60px 40px;
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
  }
  thead th {
    background: #3f51b5;
    color: white;
    padding: 12px 16px;
    text-align: left;
  }
  tbody td {
    padding: 12px 16px;
    border-bottom: 1px solid #eee;
  }
  tbody tr.failed td { color: #f44336; font-weight: 600; }
  tbody tr.passed td { color: #4caf50; font-weight: 600; }
</style>
</head>
<body>

<header><i class="fas fa-tachometer-alt"></i> K6 Load Test Dashboard: <%= title %></header>

<!-- Top Metrics -->
<div class="metrics-row">
  <div class="metric-card"><h4><i class="fas fa-globe"></i> Total Requests</h4><div class="number"><%= data.metrics.http_reqs?.values.count %></div></div>
  <div class="metric-card failed"><h4><i class="fas fa-times-circle"></i> Failed Requests</h4><div class="number"><%= data.metrics.http_req_failed?.values.count %></div></div>
  <div class="metric-card"><h4><i class="fas fa-check-circle"></i> Passed Checks</h4><div class="number"><%= checkPasses %></div></div>
  <div class="metric-card failed"><h4><i class="fas fa-exclamation-triangle"></i> Failed Checks</h4><div class="number"><%= checkFailures %></div></div>
  <div class="metric-card"><h4><i class="fas fa-server"></i> Successful Status Codes</h4><div class="number"><%= status2xx %></div></div>
  <div class="metric-card failed"><h4><i class="fas fa-ban"></i> Failed Status Codes</h4><div class="number"><%= statusFailed %></div></div>
</div>

<!-- Charts Section -->
<div class="charts-section">
  <div class="chart-card"><canvas id="responseTimeChart"></canvas></div>
  <div class="chart-card"><canvas id="throughputChart"></canvas></div>
  <div class="chart-card"><canvas id="errorRateChart"></canvas></div>
  <div class="chart-card"><canvas id="p95ResponseChart"></canvas></div>
  <div class="chart-card"><canvas id="iterationsChart"></canvas></div>
  <div class="chart-card"><canvas id="httpReqsChart"></canvas></div>
</div>

<!-- Insights Table -->
<table>
  <thead>
    <tr>
      <th>Metric</th>
      <th>Expected</th>
      <th>Actual</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody>
    <% for(let insight of insights) { %>
      <tr class="<%= insight.status === 'Fail' ? 'failed' : 'passed' %>">
        <td><%= insight.metric %></td>
        <td><%= insight.expected %></td>
        <td><%= insight.actual %></td>
        <td><%= insight.status %></td>
      </tr>
    <% } %>
  </tbody>
</table>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  function createChart(ctx, type, label, data, color) {
    return new Chart(ctx, {
      type: type,
      data: { labels: data.labels, datasets: [{ label, data: data.values, borderColor: color, backgroundColor: color+'33', fill: true, tension: 0.3 }] },
      options: {
        responsive: true,
        plugins: { legend: { display: true, labels: { color: '#333', font: { size: 14 } } } },
        scales: { x: { ticks: { color: '#555' }, grid: { color: '#eee' } }, y: { ticks: { color: '#555' }, grid: { color: '#eee' } } }
      }
    });
  }

  // Example: use real K6 metrics
  const responseTimeData = { labels: data.metrics.http_req_duration.timestamps, values: data.metrics.http_req_duration.values.avg };
  const throughputData = { labels: data.metrics.http_reqs.timestamps, values: data.metrics.http_reqs.values.count };
  const errorRateData = { labels: data.metrics.http_req_failed.timestamps, values: data.metrics.http_req_failed.values.count };
  const p95ResponseData = { labels: data.metrics.http_req_duration.timestamps, values: data.metrics.http_req_duration.values.p95 };
  const iterationsData = { labels: data.metrics.iterations.timestamps, values: data.metrics.iterations.values.count };
  const httpReqsData = { labels: data.metrics.http_reqs.timestamps, values: data.metrics.http_reqs.values.rate };

  createChart(document.getElementById('responseTimeChart').getContext('2d'), 'line', 'Avg Response Time (ms)', responseTimeData, '#3f51b5');
  createChart(document.getElementById('throughputChart').getContext('2d'), 'bar', 'Throughput (req/sec)', throughputData, '#4caf50');
  createChart(document.getElementById('errorRateChart').getContext('2d'), 'line', 'Error Rate (%)', errorRateData, '#f44336');
  createChart(document.getElementById('p95ResponseChart').getContext('2d'), 'line', 'P95 Response Time (ms)', p95ResponseData, '#ff9800');
  createChart(document.getElementById('iterationsChart').getContext('2d'), 'line', 'Iterations', iterationsData, '#9c27b0');
  createChart(document.getElementById('httpReqsChart').getContext('2d'), 'bar', 'HTTP Requests Rate', httpReqsData, '#00bcd4');
</script>

</body>
</html>
