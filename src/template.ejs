<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>K6 Load Test: <%= title %></title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous">
<style>
  body, html {
    margin: 0; padding: 0; font-family: 'Roboto', sans-serif; background: #f4f6fa; color: #222;
    display: flex; height: 100vh; transition: background 0.3s, color 0.3s;
  }
  body.dark { background: #121212; color: #eee; }

  /* Sidebar with icons only */
  nav.sidebar {
    width: 60px; background: #3f51b5; display: flex; flex-direction: column; align-items: center; padding: 12px 0;
  }
  nav.sidebar ul { list-style:none; padding:0; margin:0; width:100%; }
  nav.sidebar ul li { margin-bottom: 20px; text-align:center; }
  nav.sidebar ul li a { display: block; color: white; font-size: 1.4rem; text-decoration:none; padding:12px 0; border-radius:8px; transition:0.3s; }
  nav.sidebar ul li a.active, nav.sidebar ul li a:hover { background: rgba(255,255,255,0.2); }

  main.content { flex-grow:1; padding:32px 40px; overflow-y:auto; }

  h1 { font-weight:700; font-size:2rem; margin-bottom:24px; color:#3f51b5; }
  body.dark h1 { color:#90caf9; }

  /* Summary cards */
  .summary-row { display:flex; flex-wrap:wrap; gap:20px; margin-bottom:40px; }
  .card { background:white; border-radius:12px; flex:1 1 200px; padding:24px; box-shadow:0 4px 12px rgba(0,0,0,0.12); transition:0.3s; }
  body.dark .card { background:#1e1e1e; box-shadow:0 4px 14px rgba(255,255,255,0.05); }
  .card:hover { transform:translateY(-4px); box-shadow:0 8px 20px rgba(0,0,0,0.25); }
  .card.failed { border-left:6px solid #f44336; }
  .card h4 { margin:0 0 10px; font-size:1.1rem; display:flex; align-items:center; gap:8px; }
  .card .number { font-size:2rem; font-weight:700; }

  /* Charts */
  .chart-container { margin-bottom:40px; width:100%; }
  canvas { width:100% !important; height:350px !important; }

  /* Tables */
  table { width:100%; border-collapse:collapse; font-size:0.95rem; margin-top:16px; background:white; border-radius:8px; overflow:hidden; }
  body.dark table { background:#1e1e1e; color:#ddd; }
  thead th { background:#3f51b5; color:white; padding:12px 16px; font-weight:600; }
  tbody td { padding:12px 16px; border-bottom:1px solid #eee; }
  body.dark tbody td { border-bottom:1px solid #333; }
  tbody tr.failed td { color:#f44336; font-weight:600; }
  tbody tr.passed td { color:#4caf50; font-weight:600; }

</style>
</head>
<body>

<nav class="sidebar">
  <ul>
    <li><a href="#" class="tab-link active" data-tab="overview"><i class="fas fa-home"></i></a></li>
    <li><a href="#" class="tab-link" data-tab="metrics"><i class="fas fa-chart-bar"></i></a></li>
    <li><a href="#" class="tab-link" data-tab="charts"><i class="fas fa-chart-line"></i></a></li>
    <li><a href="#" class="tab-link" data-tab="checks"><i class="fas fa-clipboard-check"></i></a></li>
  </ul>
</nav>

<main class="content">
<h1><i class="fas fa-tachometer-alt"></i> Load Test: <%= title %></h1>

<!-- Overview Cards -->
<div class="summary-row">
  <div class="card"><h4><i class="fas fa-check-circle"></i> Passed Checks</h4><div class="number"><%= checkPasses %></div></div>
  <div class="card failed"><h4><i class="fas fa-exclamation-triangle"></i> Failed Checks</h4><div class="number"><%= checkFailures %></div></div>
  <div class="card"><h4><i class="fas fa-server"></i> Successful Status Codes</h4><div class="number"><%= status2xx %></div></div>
  <div class="card failed"><h4><i class="fas fa-ban"></i> Failed Status Codes</h4><div class="number"><%= statusFailed %></div></div>
  <div class="card failed"><h4><i class="fas fa-times-circle"></i> Failed Requests</h4><div class="number"><%= failedRequests %></div></div>
  <div class="card"><h4><i class="fas fa-exclamation-circle"></i> Threshold Breaches</h4><div class="number"><%= thresholdBreaches %></div></div>
</div>

<!-- Charts Section -->
<section id="charts" class="tab-content active">
  <h2>Load Test Charts</h2>
  <div class="chart-container"><canvas id="responseTimeChart"></canvas></div>
  <div class="chart-container"><canvas id="throughputChart"></canvas></div>
  <div class="chart-container"><canvas id="errorRateChart"></canvas></div>
  <div class="chart-container"><canvas id="p95Chart"></canvas></div>
  <div class="chart-container"><canvas id="iterationChart"></canvas></div>
  <div class="chart-container"><canvas id="durationChart"></canvas></div>
</section>

<!-- Checks Table -->
<section id="checks" class="tab-content">
  <h2>Checks</h2>
  <table>
    <thead><tr><th>Check</th><th>Passes</th><th>Fails</th></tr></thead>
    <tbody>
      <% for(let check of data.root_group.checks) { %>
      <tr class="<%= check.fails>0?'failed':'passed' %>">
        <td><%= check.name %></td>
        <td><%= check.passes %></td>
        <td><%= check.fails %></td>
      </tr>
      <% } %>
    </tbody>
  </table>
</section>

</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  // Tabs
  document.querySelectorAll('.tab-link').forEach(link=>{
    link.addEventListener('click', e=>{
      e.preventDefault();
      document.querySelectorAll('.tab-link').forEach(l=>l.classList.remove('active'));
      link.classList.add('active');
      const tab = link.dataset.tab;
      document.querySelectorAll('.tab-content').forEach(c=>c.classList.remove('active'));
      document.getElementById(tab)?.classList.add('active');
    });
  });

  // Charts
  const labels = Array.from({length: data.metrics.http_reqs?.values.counts?.length || 20}, (_, i) => `T${i+1}`);
  const responseTimes = data.metrics.http_req_duration?.values.avg_data || [];
  const throughputs = data.metrics.http_reqs?.values.counts || [];
  const errorRates = data.metrics.http_req_failed?.values.counts || [];
  const p95s = data.metrics.http_req_duration?.values['p(95)'] || [];
  const iterations = data.metrics.iterations?.values.counts || [];
  const durations = data.metrics.http_req_duration?.values.max_data || [];

  function createChart(ctx, type, label, data, color){
    return new Chart(ctx, {
      type, data: { labels, datasets:[{label, data, borderColor: color, backgroundColor: color+'33', fill:true, tension:0.3}] },
      options: { responsive:true, plugins:{legend:{display:true}}, interaction:{mode:'nearest', intersect:false}, scales:{x:{grid:{color:'#eee'}},y:{grid:{color:'#eee'}}} }
    });
  }

  createChart(document.getElementById('responseTimeChart').getContext('2d'),'line','Avg Response Time',responseTimes,'#3f51b5');
  createChart(document.getElementById('throughputChart').getContext('2d'),'bar','Throughput',throughputs,'#4caf50');
  createChart(document.getElementById('errorRateChart').getContext('2d'),'line','Error Rate',errorRates,'#f44336');
  createChart(document.getElementById('p95Chart').getContext('2d'),'line','P95 Response',p95s,'#ff9800');
  createChart(document.getElementById('iterationChart').getContext('2d'),'bar','Iterations',iterations,'#9c27b0');
  createChart(document.getElementById('durationChart').getContext('2d'),'line','Max Duration',durations,'#009688');
</script>
</body>
</html>
